<VirtualHost *:80>
        ServerName gitlab.domain.tld
        ServerAdmin admin@domain.tld

        RewriteEngine on
        RewriteCond %{SERVER_NAME} =gitlab.domain.tld
        RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

<IfModule mod_ssl.c>
	<VirtualHost *:443>
		ServerAdmin admin@domain.tld

		ErrorLog ${APACHE_LOG_DIR}/error.log
		CustomLog ${APACHE_LOG_DIR}/access.log combined

		Include /etc/letsencrypt/options-ssl-apache.conf
		SSLCertificateFile /etc/letsencrypt/live/mtse.cc/fullchain.pem
		SSLCertificateKeyFile /etc/letsencrypt/live/mtse.cc/privkey.pem

		ServerName gitlab.domain.tld
		ServerSignature Off

		ProxyPreserveHost On

		# here we don't want to proxify the requests for the existing assets in gitlab's public directory
		ProxyPassMatch ^(/[^/]+\.(html|png|ico|css|txt))$ !
		ProxyPass /assets !

		<Location />
			Require all granted

			ProxyPassReverse http://127.0.0.1:8181
			ProxyPassReverse https://gitlab.domain.tld/
		</Location>

		AllowEncodedSlashes NoDecode

		RewriteEngine on
		
		RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_FILENAME} !-f [OR]
		RewriteCond %{REQUEST_URI} ^/uploads/.*
		RewriteRule .* http://127.0.0.1:8181%{REQUEST_URI} [P,QSA,NE] # needed for downloading attachments
		
		DocumentRoot /opt/gitlab/embedded/service/gitlab-rails/public

		RequestHeader set "X-Forwarded-Proto" expr=%{REQUEST_SCHEME}
		RequestHeader set "X-Forwarded-SSL" expr=%{HTTPS}
	</VirtualHost>
</IfModule>
